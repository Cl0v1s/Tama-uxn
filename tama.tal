( Stats: https://www.tamatalk.com/threads/tama-behaviour-schedule-v5.181751/ )
( Chr: http://make.vg/brewtool/chr/index.html )
( Base64 to hex: https://cryptii.com/pipes/base64-to-hex )

|00 @System  [ &vector $2 &pad $6 &r $2 &g $2 &b $2 ]
|10 @Console &vector $2 &read $1 &pad $4 &type $1 &write $1 &error $1
|20 @Screen  [ &vector $2 &width $2 &height $2 &pad $2 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1 ]
|80 @Controller [ &vector $2 &button $1 &key $1 ]
|c0 @DateTime &year $2 &month $1 &day $1 &hour $1 &minute $1 &second $1 &dotw $1 &doty $2 &isdst $1

( MACROS )

( sub-routine-address -- )
%CALL {
    JSR2
}

( -- )
( return-address -- (rst) )
%RET {
    JMP2r
}

( sub with carry )
( a b -- a-b c )
%SUBC {
    SWP DUP ROT SUB
    SWP GTHk SWP POP
}

( sub2 with carry )
( a b -- a-b c )
%SUBC2 {
    SWP2 DUP2 ROT2 SUB2
    SWP2 GTHk2 SWP2 POP2
}

%TIME {
    #00 .DateTime/minute DEI .epoch/min LDZ SUBC
    #00 SWP .DateTime/hour DEI .epoch/hour LDZ ROT ADD SUBC
    #00 SWP .DateTime/day DEI .epoch/day LDZ ROT ADD SUB
    #05a0 MUL2 SWP2 #003c MUL2 ADD2 ADD2 
}

( sprite-setting sprite-addr x y -- sprite-setting )
%DRAW_TILE {
    .Screen/y DEO2
    .Screen/x DEO2
    .Screen/addr DEO2
    .Screen/sprite DEOk 
    POP
}

( Structs )

|0000
    @frame-counter $1
    @cursor $2
    ( dd hh mm, we only keep low nibble for year )
    @epoch 
        &day $1
        &hour $1
        &min $1
    @Events $6
    @Tama 
        &frame $2
        &x $2
        &y $2
        &state $1
        &happy $1
        &hunger $1
        &strain $1
        &poop $1

|0100
    #0040 .Screen/width DEO2
    #0040 .Screen/height DEO2
    #13ef .System/r DEO2
    #27af .System/g DEO2
    #5b7c .System/b DEO2

    ( we want only low nibble for year )
    ;load-game CALL
    ;tama-init CALL
    ;ui-init CALL

    ;on-screen .Screen/vector DEO2
BRK


( Methods )

( MISC )

( load game save (stub for now) )
@load-game 
    ( we load when the game was first started to store a timestamp on 16 bit from then )
    ( .DateTime/day DEI )
    #0d .epoch/day STZ
    ( .DateTime/hour DEI )
    #0c .epoch/hour STZ
    ( .DateTime/minute DEI )
    #00 .epoch/min STZ
RET

( SCREEN Methods )
( Run each frames )
@on-screen
    .frame-counter LDZk INC SWP STZk POP
    #0f AND
    #0f EQU
    ,&draw JCN
    ,&end JMP
    &draw 
        ;tama-update CALL
        ;ui-update CALL
    &end
BRK

( Clean & 16x16 sprite on screen )
( x y -- x y )
@sprite-clean 
    .Screen/y DEO2k POP SWP2 .Screen/x DEO2k POP SWP2
    ;clean .Screen/addr DEO2
    #02 .Screen/sprite DEO
    .Screen/x DEI2 #0008 ADD2 .Screen/x DEO2
    #02 .Screen/sprite DEO
    .Screen/y DEI2 #0008 ADD2 .Screen/y DEO2
    #02 .Screen/sprite DEO
    #0008 .Screen/x DEI2 SUB2 .Screen/x DEO2
    #02 .Screen/sprite DEO
RET

( Draw a 16x16 sprite on screen )
( sprite-setting sprite-addr x y -- )
@sprite-draw 
    DRAW_TILE
    #0008 .Screen/x DEI2 ADD2 .Screen/x DEO2
    #0008 .Screen/addr DEI2 ADD2 .Screen/addr DEO2
    DUP .Screen/sprite DEO
    #0010 .Screen/addr DEI2 ADD2 .Screen/addr DEO2
    #0008 .Screen/y DEI2 ADD2 .Screen/y DEO2
    DUP .Screen/sprite DEO
    .Screen/x DEI2 #0008 SUB2 .Screen/x DEO2
    .Screen/addr DEI2 #0008 SUB2 .Screen/addr DEO2
    .Screen/sprite DEO
RET

( UI methods )
%UI-Y { #0036 }

@ui-slots 
    &food 001c 
    &end 0000

( init the UI )
@ui-init 
    ;ui-slots LDA2 .cursor STZ2
    #01 ;food ;ui-slots/food LDA2 UI-Y DRAW_TILE POP
RET 

@ui-update 
    #01 ;ui-draw CALL
RET 

( draw blinking cursor )
( pixel-settings -- )
@ui-draw 
    UI-Y #0008 ADD2 .Screen/y DEO2
    .cursor LDZ2 #0003 ADD2 DUP2 .Screen/x DEO2
    ROT DUP
    .Screen/pixel DEO
    ROT ROT
    INC .Screen/x DEO2
    .Screen/pixel DEO
RET 


( TAMA methods )
( init the tamagotchi )
@tama-init 
    ;egg/animation .Tama/frame STZ2
    #0018 .Tama/x STZ2
    #0018 .Tama/y STZ2
    #00 .Tama/state STZ

    TIME #0001 ADD2 .Events STZ2 
    ;tama-hatch-egg .Events #02 ADD STZ2 
RET

( hatch egg )
@tama-hatch-egg
    #31 .Console/write DEO
RET

@tama-check-for-events
( check for pending events )
    .Events LDZ2
    #0000 EQU2 ,&after-events JCN
    .Events LDZ2
    TIME GTH2 ,&after-events JCN
    .Events #02 ADD LDZ2 CALL
    #0000 .Events STZ2
    &after-events
RET

( update tamagotchi state when egg )
@tama-update-when-egg 



( update tamagotchi state )
@tama-update 
    ;tama-check-for-events CALL

    &after-state
    .Tama/x LDZ2 .Tama/y LDZ2
    ;sprite-clean CALL
    POP2 POP2
    ;tama-draw CALL
RET

( draw the tamagotchi and updates its animation )
@tama-draw 
    .Tama/frame LDZ2 #0003 ADD2 .Tama/frame STZ2k POP LDA
    ,&skip-reset JCN
    ;egg/animation .Tama/frame STZ2
    &skip-reset
    .Tama/frame LDZ2 DUP2 INC SWP2
    LDA ROT ROT
    LDA2
    .Tama/x LDZ2 
    .Tama/y LDZ2
    ;sprite-draw CALL
RET

( RES )

@clean
    00 00 00 00 00 00 00 00

@food 
    00 28 14 7e 42 3c 00 00

@egg
    &animation
    01 =egg/frame-1 01 =egg/frame-2 01 =egg/frame-1 01 =egg/frame-3 00
    &frame-1
    00 00 03 04 04 08 08 10
    00 00 c0 20 60 f0 70 08
    13 17 0f 0f 07 00 00 00
    08 88 90 10 e0 00 00 00
    &frame-2
    00 00 03 04 04 08 08 08
    00 00 c0 20 60 f0 70 08
    09 0b 07 07 03 00 00 00
    84 c4 c8 88 f0 00 00 00
    &frame-3
    00 00 01 02 02 06 04 08
    00 00 e0 30 70 f8 78 08
    13 17 0f 0f 07 00 00 00
    08 88 90 90 e0 00 00 00





